<?xml version="1.0" ?><component abstract="" loc="53:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>
 SensirionSht11LogicP contains the actual driver logic needed to
 read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>
 SensirionSht11LogicP contains the actual driver logic needed to
 read from the Sensirion SHT11 temperature/humidity sensor. It
 depends on 2 underlying GeneralIO interfaces, one for the data pin
 and one for the clock pin, and one underlying GpioInterrupt.  It
 provides the HAL-level SensirionSht11 interface. It's generic, so
 you can instantiate it multiple times if you have more than one
 Sensirion SHT11 attached to a node. 
 
 &lt;p&gt;
 This code assumes that the MCU clock is less than 10 MHz.  If you
 ever run this on a faster MCU, you'll need to insert a lot of
 waits to keep the Sensirion happy.

 @author Gilman Tolle &lt;gtolle@archrock.com&gt;
 @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:12 $
</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    <specification><interface loc="58:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" name="InterruptDATA" provided="0" ref="0xb67f3190">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="InterruptDATA" ref="0xb67f3190" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GpioInterrupt" qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" ref="0xb67f3368" scoped=""/>
        <function-ref name="disable" ref="0xb67f3448" scoped=""/>
        <function-ref name="enableFallingEdge" ref="0xb67f3528" scoped=""/>
        <function-ref name="enableRisingEdge" ref="0xb67f3608" scoped=""/>
      </interface-functions>
    </interface><interface loc="102:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" name="readSensor" provided="0" ref="0xb67e8650">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="readSensor" ref="0xb67e8650" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" ref="0xb67e8828" scoped=""/>
        <function-ref name="runTask" ref="0xb67e8908" scoped=""/>
      </interface-functions>
    </interface><interface loc="103:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" name="signalStatusDone" provided="0" ref="0xb67e8e88">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="signalStatusDone" ref="0xb67e8e88" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" ref="0xb67e7070" scoped=""/>
        <function-ref name="runTask" ref="0xb67e7150" scoped=""/>
      </interface-functions>
    </interface><interface loc="57:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" name="CLOCK" provided="0" ref="0xb67f4688">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="CLOCK" ref="0xb67f4688" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GeneralIO" qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" ref="0xb67f4860" scoped=""/>
        <function-ref name="isInput" ref="0xb67f4940" scoped=""/>
        <function-ref name="toggle" ref="0xb67f4a20" scoped=""/>
        <function-ref name="isOutput" ref="0xb67f4b00" scoped=""/>
        <function-ref name="get" ref="0xb67f4be0" scoped=""/>
        <function-ref name="makeOutput" ref="0xb67f4cc0" scoped=""/>
        <function-ref name="set" ref="0xb67f4da0" scoped=""/>
        <function-ref name="clr" ref="0xb67f4e80" scoped=""/>
      </interface-functions>
    </interface><interface loc="54:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" name="SensirionSht11" provided="1" ref="0xb67f5010">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="SensirionSht11" ref="0xb67f5010" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.chips.sht11.SensirionSht11" qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
          <typename><typedef-ref name="uint8_t" ref="0xb77c62d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" ref="0xb67f51e8" scoped=""/>
        <function-ref name="readStatusReg" ref="0xb67f52c8" scoped=""/>
        <function-ref name="measureHumidity" ref="0xb67f53a8" scoped=""/>
        <function-ref name="measureTemperature" ref="0xb67f5488" scoped=""/>
        <function-ref name="writeStatusReg" ref="0xb67f5568" scoped=""/>
        <function-ref name="reset" ref="0xb67f5648" scoped=""/>
        <function-ref name="writeStatusRegDone" ref="0xb67f5728" scoped=""/>
        <function-ref name="readStatusRegDone" ref="0xb67f5808" scoped=""/>
        <function-ref name="resetDone" ref="0xb67f58e8" scoped=""/>
        <function-ref name="measureTemperatureDone" ref="0xb67f59c8" scoped=""/>
      </interface-functions>
    </interface><interface loc="56:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" name="DATA" provided="0" ref="0xb67f5bd8">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="DATA" ref="0xb67f5bd8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GeneralIO" qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" ref="0xb67f5db0" scoped=""/>
        <function-ref name="isInput" ref="0xb67f5e90" scoped=""/>
        <function-ref name="toggle" ref="0xb67f4010" scoped=""/>
        <function-ref name="isOutput" ref="0xb67f40f0" scoped=""/>
        <function-ref name="get" ref="0xb67f41d0" scoped=""/>
        <function-ref name="makeOutput" ref="0xb67f42b0" scoped=""/>
        <function-ref name="set" ref="0xb67f4390" scoped=""/>
        <function-ref name="clr" ref="0xb67f4470" scoped=""/>
      </interface-functions>
    </interface><interface loc="62:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" name="Leds" provided="0" ref="0xb67f0a78">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Leds" ref="0xb67f0a78" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" ref="0xb67f0c50" scoped=""/>
        <function-ref name="led0Toggle" ref="0xb67f0d30" scoped=""/>
        <function-ref name="led1On" ref="0xb67f0e10" scoped=""/>
        <function-ref name="led1Toggle" ref="0xb67f0ef0" scoped=""/>
        <function-ref name="led2Toggle" ref="0xb67ef010" scoped=""/>
        <function-ref name="get" ref="0xb67ef0f0" scoped=""/>
        <function-ref name="led1Off" ref="0xb67ef1d0" scoped=""/>
        <function-ref name="led2Off" ref="0xb67ef550" scoped=""/>
        <function-ref name="set" ref="0xb67ef2b0" scoped=""/>
        <function-ref name="led0On" ref="0xb67ef390" scoped=""/>
        <function-ref name="led2On" ref="0xb67ef470" scoped=""/>
      </interface-functions>
    </interface><interface loc="60:/opt/tinyos-2.1.1/tos/chips/sht11/SensirionSht11LogicP.nc" name="Timer" provided="0" ref="0xb67f3870">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0xb67f3870" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0xb72b5c40"/>
            <typename><typedef-ref name="TMilli" ref="0xb72b5e08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0xb67f0368" scoped=""/>
        <function-ref name="fired" ref="0xb67f2608" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0xb67f2d10" scoped=""/>
        <function-ref name="isOneShot" ref="0xb67f2ab8" scoped=""/>
        <function-ref name="getdt" ref="0xb67f0818" scoped=""/>
        <function-ref name="gett0" ref="0xb67f05c0" scoped=""/>
        <function-ref name="isRunning" ref="0xb67f2860" scoped=""/>
        <function-ref name="startPeriodic" ref="0xb67f3e98" scoped=""/>
        <function-ref name="startOneShotAt" ref="0xb67f0048" scoped=""/>
        <function-ref name="startOneShot" ref="0xb67f2130" scoped=""/>
        <function-ref name="stop" ref="0xb67f23b0" scoped=""/>
      </interface-functions>
    </interface></specification><referenced/></component>